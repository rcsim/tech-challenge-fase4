{
	"info": {
		"_postman_id": "ec96a6f6-def1-4192-997e-607b2ee3019f",
		"name": "Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17475893"
	},
	"item": [
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Validate JSON schema\", function () {\r",
							"    var schema = {\r",
							"        \"type\": \"array\",\r",
							"        \"items\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"id\": {\"type\": \"string\"},\r",
							"                \"name\": {\"type\": \"string\"},\r",
							"                \"email\": {\"type\": \"string\"},\r",
							"                \"favorites\": {\r",
							"                    \"type\": \"array\",\r",
							"                    \"items\": {\"type\": \"string\"}\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\"id\", \"name\", \"email\", \"favorites\"]\r",
							"        }\r",
							"    };\r",
							"    \r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/users",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is ok\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate JSON schema\", function () {\r",
							"    var schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"name\": {\"type\": \"string\"},\r",
							"            \"email\": {\"type\": \"string\"}\r",
							"        },\r",
							"        \"required\": [\"name\", \"email\"]\r",
							"    };\r",
							"    \r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"User 1\",\r\n    \"email\": \"user1@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/users",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate JSON schema\", function () {\r",
							"    var schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"name\": {\"type\": \"string\"},\r",
							"            \"email\": {\"type\": \"string\"}\r",
							"        },\r",
							"        \"required\": [\"name\", \"email\"]\r",
							"    };\r",
							"    \r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/users/65b7b2c4b0c0f1248bf3a859",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"65b7b2c4b0c0f1248bf3a859"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Recommendations for a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate JSON schema\", function () {\r",
							"    var schema = {\r",
							"        \"type\": \"array\",\r",
							"        \"items\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"id\": {\"type\": \"string\"},\r",
							"                \"title\": {\"type\": \"string\"},\r",
							"                \"description\": {\"type\": \"string\"},\r",
							"                \"url\": {\"type\": \"string\"},\r",
							"                \"publishDate\": {\"type\": \"string\"},\r",
							"                \"views\": {\"type\": \"integer\"},\r",
							"                \"favoritedBy\": {\r",
							"                    \"type\": [\"array\", \"null\"],\r",
							"                    \"items\": {\r",
							"                        \"type\": \"object\",\r",
							"                        \"properties\": {\r",
							"                            \"timestamp\": {\"type\": \"integer\"},\r",
							"                            \"date\": {\"type\": \"string\"}\r",
							"                        },\r",
							"                        \"required\": [\"timestamp\", \"date\"]\r",
							"                    }\r",
							"                },\r",
							"                \"category\": {\r",
							"                    \"type\": [\"object\", \"null\"],\r",
							"                    \"properties\": {\r",
							"                        \"timestamp\": {\"type\": \"integer\"},\r",
							"                        \"date\": {\"type\": \"string\"}\r",
							"                    },\r",
							"                    \"required\": [\"timestamp\", \"date\"]\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\"id\", \"title\", \"description\", \"url\", \"publishDate\", \"views\", \"favoritedBy\", \"category\"]\r",
							"        }\r",
							"    };\r",
							"    \r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/users/recommendation/65b6ecd400a90bf49c1f28c2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"recommendation",
						"65b6ecd400a90bf49c1f28c2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate JSON schema\", function () {\r",
							"    var schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"name\": {\"type\": \"string\"},\r",
							"            \"email\": {\"type\": \"string\"}\r",
							"        },\r",
							"        \"required\": [\"name\", \"email\"]\r",
							"    };\r",
							"    \r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"6589fbb24ac9e968138a83f9\",\r\n    \"name\": \"User 1 Updated\",\r\n    \"email\": \"user1@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/users/65b7b2c4b0c0f1248bf3a859",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"65b7b2c4b0c0f1248bf3a859"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/users/65b7b2c4b0c0f1248bf3a859",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"65b7b2c4b0c0f1248bf3a859"
					]
				}
			},
			"response": []
		}
	]
}